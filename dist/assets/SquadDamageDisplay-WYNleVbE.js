import{_ as h,T as x}from"./TopNavBar-Co7SRhar.js";import{c,a as m,b as t,w as f,v as D,F as g,r as p,o as u,t as i,d as T}from"./index-GM_T3y_y.js";const _={name:"SquadDamageDisplay",components:{TopNavBar:x},data(){return{inputData:[],damageData:[],healingData:[],tankingData:[]}},methods:{processData(){console.log("InputData"),console.log(this.inputData);var l=this.inputData.split(`
`);console.log("Lines"),console.log(l);const e=l.findIndex(o=>o.startsWith("Recorded damage for this squad:")),n=l.findIndex(o=>o.startsWith("Recorded healing for this squad:")),s=l.findIndex(o=>o.startsWith("Top tanking for this squad:"));console.log("damageIndex"),console.log(e),console.log("HealingIndex"),console.log(n),console.log("TankingIndex"),console.log(s),e!==-1&&(console.log("damage"),this.damageData=this.parseDamageTable(l.slice(e+1,n!==-1?n:s))),n!==-1&&(console.log("healing"),this.healingData=this.parseHealingTable(l.slice(n+1,s!==-1?s:l.length))),s!==-1&&(console.log("tanking"),this.tankingData=this.parseTankingTable(l.slice(s+1,l.length)))},parseDamageTable(l){const e=[];for(const n of l){if(console.log(n),console.log(l),n.startsWith("Active combat duration:")||n==="")continue;const[s,o]=n.split(":").map(a=>a.trim()),[r,d]=o.split(/[(](.*)[)]/).map(a=>a.trim());e.push({name:s,dps:r,totalDamage:d})}return e},parseHealingTable(l){console.log("xxxxxxxxxxxxxxxxxxxx");const e=[];for(const n of l){if(n.startsWith("Active combat duration:")||n==="")continue;console.log(n),console.log("xxxxxxxxxxxxxxxxxxxx");const[s,o]=n.split(":").map(a=>a.trim()),[r,d]=o.split(/[(](.*)[)]/).map(a=>a.trim());e.push({name:s,hps:r,totalHealing:d})}return e},parseTankingTable(l){const e=[];for(const n of l){if(n.startsWith("Active combat duration:")||n==="")continue;const[s,o]=n.split(":").map(a=>a.trim()),[r,d]=o.split(/[(](.*)[)]/).map(a=>a.trim());e.push({name:s,totalTanking:r,percent:d})}return e}}},b={class:"container"},k=t("h2",null,"Recorded damage for this squad",-1),v=t("thead",null,[t("tr",null,[t("th",null,"Name"),t("th",null,"DPS"),t("th",null,"Total Damage")])],-1),I=t("h2",null,"Recorded healing for this squad",-1),q=t("thead",null,[t("tr",null,[t("th",null,"Name"),t("th",null,"HPS"),t("th",null,"Total Healing")])],-1),H=t("h2",null,"Top tanking for this squad",-1),N=t("thead",null,[t("tr",null,[t("th",null,"Name"),t("th",null,"Total Tanking"),t("th",null,"Percent")])],-1);function S(l,e,n,s,o,r){const d=T("TopNavBar");return u(),c(g,null,[m(d),t("div",b,[f(t("textarea",{"onUpdate:modelValue":e[0]||(e[0]=a=>o.inputData=a),placeholder:"Enter data",onInput:e[1]||(e[1]=(...a)=>r.processData&&r.processData(...a))},null,544),[[D,o.inputData]]),k,t("table",null,[v,t("tbody",null,[(u(!0),c(g,null,p(o.damageData,a=>(u(),c("tr",{key:a.id},[t("td",null,i(a.name),1),t("td",null,i(a.dps),1),t("td",null,i(a.totalDamage),1)]))),128))])]),I,t("table",null,[q,t("tbody",null,[(u(!0),c(g,null,p(o.healingData,a=>(u(),c("tr",{key:a.id},[t("td",null,i(a.name),1),t("td",null,i(a.hps),1),t("td",null,i(a.totalHealing),1)]))),128))])]),H,t("table",null,[N,t("tbody",null,[(u(!0),c(g,null,p(o.tankingData,a=>(u(),c("tr",{key:a.id},[t("td",null,i(a.name),1),t("td",null,i(a.totalTanking),1),t("td",null,i(a.percent),1)]))),128))])])])],64)}const W=h(_,[["render",S]]);export{W as default};
